{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"D:\\\\PROGRAMIRANJE\\\\StarWarsApp\\\\swapp\\\\screens\\\\FavCharacterList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { RootStoreContext } from \"../store/RootStoreContext\";\nimport { observer } from 'mobx-react';\n\nvar FavCharacterList = observer(_class = (_temp = _class2 = function (_React$Component) {\n  _inherits(FavCharacterList, _React$Component);\n\n  var _super = _createSuper(FavCharacterList);\n\n  function FavCharacterList() {\n    _classCallCheck(this, FavCharacterList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FavCharacterList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var favCharacterStore = this.context.favCharacterStore;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$context = this.context,\n          characterStore = _this$context.characterStore,\n          favCharacterStore = _this$context.favCharacterStore;\n      var favChars = favCharacterStore.favChars;\n      var favCharList = favChars.map(function (favCharacter) {\n        return React.createElement(TouchableOpacity, {\n          key: favCharacter.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }\n        }, React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }\n        }, \" \", favCharacter)));\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, \" \", favCharList));\n    }\n  }]);\n\n  return FavCharacterList;\n}(React.Component), _class2.contextType = RootStoreContext, _temp)) || _class;\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-around'\n  },\n  text: {\n    color: 'blue'\n  }\n});\nexport default FavCharacterList;","map":{"version":3,"sources":["D:/PROGRAMIRANJE/StarWarsApp/swapp/screens/FavCharacterList.js"],"names":["React","RootStoreContext","observer","FavCharacterList","favCharacterStore","context","characterStore","favChars","favCharList","map","favCharacter","url","styles","container","text","Component","contextType","StyleSheet","create","flex","flexDirection","justifyContent","color"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,gBAAT;AACA,SAASC,QAAT,QAAyB,YAAzB;;IAEMC,gB,GADLD,Q;;;;;;;;;;;;;wCAIwB;AAAA,UAEVE,iBAFU,GAEW,KAAKC,OAFhB,CAEVD,iBAFU;AAIrB;;;6BACQ;AAAA,0BACwC,KAAKC,OAD7C;AAAA,UACGC,cADH,iBACGA,cADH;AAAA,UACmBF,iBADnB,iBACmBA,iBADnB;AAAA,UAEIG,QAFJ,GAEiBH,iBAFjB,CAEIG,QAFJ;AAGJ,UAAMC,WAAW,GAAED,QAAQ,CAACE,GAAT,CAAa,UAACC,YAAD;AAAA,eAC3B,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEA,YAAY,CAACC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAO,UAAA,KAAK,EAAEC,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BJ,YAA7B,CADJ,CADA,CAD2B;AAAA,OAAb,CAAnB;AAOA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4BN,WAA5B,CADJ,CADJ;AAKH;;;;EAvB0BR,KAAK,CAACe,S,WAE1BC,W,GAAYf,gB;;AAwBvB,IAAMW,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,KAAK,EAAE;AADL;AAPuB,CAAlB,CAAf;AAYA,eAAenB,gBAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity} from 'react-native';\r\nimport { RootStoreContext } from '../store/RootStoreContext';\r\nimport { observer } from 'mobx-react';\r\n@observer\r\nclass FavCharacterList extends React.Component {\r\n\r\n    static contextType=RootStoreContext;\r\n    componentDidMount () {\r\n        //render data on load()\r\n        const {favCharacterStore} = this.context;\r\n        \r\n   }\r\n    render(){\r\n        const {characterStore, favCharacterStore} = this.context;\r\n        const { favChars } = favCharacterStore;\r\n        const favCharList= favChars.map((favCharacter) => (\r\n             <TouchableOpacity key={favCharacter.url} >\r\n             <View  style={styles.container} >\r\n                 <Text style={styles.text} > {favCharacter}</Text>\r\n             </View>\r\n             </TouchableOpacity>\r\n        ))\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.text}> {favCharList}</Text>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n       \r\n        justifyContent: 'space-around'\r\n    },\r\n    text: {\r\n        color: 'blue',\r\n     }, \r\n     \r\n   });\r\nexport default FavCharacterList;"]},"metadata":{},"sourceType":"module"}